{"version":3,"sources":["theme.js","components/navBar.js","components/data.js","components/testing/detail.js","components/testing/quiz.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","paper","type","DarkTheme","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","spacing","sectionDesktop","display","breakpoints","up","sectionMobile","NavBar","status","themechange","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","aria-label","color","Badge","badgeContent","aria-controls","aria-haspopup","FormControlLabel","control","Switch","checked","onChange","name","inputProps","label","className","AppBar","position","Toolbar","Typography","title","variant","noWrap","edge","data","AnsComponent","props","answer","localStorage","getItem","JSON","parse","ans","setAns","multiAns","setMultiAns","useEffect","setItem","stringify","Fragment","FormControl","component","RadioGroup","value","target","map","option","index","option_text","Radio","handleChange","FormGroup","Checkbox","FormHelperText","TextField","multiline","style","width","defailtValue","e","Button","hidden","Detail","handleNext","handlePrevious","handleBookmark","length","Grid","container","justify","item","xs","gutterBottom","question","Divider","marginTop","marginBottom","handleSave","disabled","marginInline","justifyContent","root","paddingTop","padding","text","questionList","margin","AutoGrid","activeQuestion","setActiveQuestion","bookmark","setBookmark","console","log","wrap","md","Paper","Fab","size","App","darkMode","setDarkMode","ThemeProvider","CssBaseline","Container","maxWidth","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.02785cf3.chunk.js","sourcesContent":["import { red, } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#b9eeff',\n        },\n        secondary: {\n            main: '#b794f6',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: \"#e3f2fd\",\n            paper: \"#bbdefb\"\n        },\n        type: \"light\"\n    },\n});\nexport const DarkTheme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: '#212121',\n        },\n        secondary: {\n            main: '#880061',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#424242',\n            paper: \"#757575\"\n        },\n    },\n});\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function NavBar({ status, themechange }) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n            <MenuItem>\n                <FormControlLabel control={\n                    <Switch\n                        checked={status}\n                        onChange={() => themechange(!status)}\n                        color=\"default\"\n                        name=\"checkedB\"\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />}\n                    label={status ? \"dark\" : \"light\"}\n                />\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Quiz App\n          </Typography>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <Switch\n                            checked={status}\n                            onChange={() => themechange(!status)}\n                            color=\"default\"\n                            name=\"theme-changer\"\n                        // inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","export const data = [\n    {\n        \"id\": 1,\n        \"type\": \"single-correct\",\n        \"question\": {\n            \"question_text\": \"Which of the following procedures can be used to compare the means of the included groups in a dummy-variable regression model?\",\n            \"question-Img-url\": \"#\"\n        },\n        \"answer\": [\n            {\n                \"id\": \"1\",\n                \"option_text\": \"Changing the reference group\",\n                \"option_img_url\": \"#\"\n            },\n            {\n                \"id\": \"2\",\n                \"option_text\": \"Linear combination\",\n                \"option-img-url\": \"#\"\n            },\n            {\n                \"id\": \"3\",\n                \"option_text\": \"Standardization \",\n                \"option-img-url\": \"#\"\n            },\n            {\n                \"id\": \"4\",\n                \"option_text\": \"Not possible\",\n                \"option_img_url\": \"#\"\n            },\n        ]\n    },\n    {\n        \"id\": 2,\n        \"type\": \"single-correct\",\n        \"question\": {\n            \"question_text\": \"Select all Fruits from below\",\n            \"question_Img-url\": \"#\"\n        },\n        \"answer\": [\n            {\n                \"option_text\": \"Mango\",\n                \"option_img_url\": \"#\"\n            },\n            {\n                \"option_text\": \"Banana\",\n                \"option_img_url\": \"#\"\n            },\n            {\n                \"option_text\": \"Pea\",\n                \"option_img_url\": \"#\"\n            },\n            {\n                \"option_text\": \"Apple\",\n                \"option_img_url\": \"#\"\n            },\n        ]\n    },\n    {\n        \"id\": 3,\n        \"type\": \"para\",\n        \"question\": {\n            \"question_text\": \"Write Down your Thaught...\",\n            \"question_Img_url\": \"#\"\n        },\n        \"answer\": []\n    },\n    {\n        \"id\": 4,\n        \"type\": \"para\",\n        \"question\": {\n            \"question_text\": \"Write answers on notebook and upload that here\",\n            \"question_Img_url\": \"#\"\n        },\n        \"answer\": []\n    },\n    {\n        \"id\": 5,\n        \"type\": \"single-correct\",\n        \"question\": {\n            \"question_text\": \"Select all Fruits from below\",\n            \"question_Img-url\": \"#\"\n        },\n        \"answer\": [\n            {\n                \"option_text\": \"Mango\",\n                \"option_img_url\": \"#\"\n            },\n            {\n                \"option_text\": \"Banana\",\n                \"option_img_url\": \"#\"\n            },\n            {\n                \"option_text\": \"Pea\",\n                \"option_img_url\": \"#\"\n            },\n            {\n                \"option_text\": \"Apple\",\n                \"option_img_url\": \"#\"\n            },\n        ]\n    },\n    {\n        \"id\": 6,\n        \"type\": \"single-correct\",\n        \"question\": {\n            \"question_text\": \"Which of the following procedures can be used to compare the means of the included groups in a dummy-variable regression model?\",\n            \"question-Img-url\": \"#\"\n        },\n        \"answer\": [\n            {\n                \"id\": \"1\",\n                \"option_text\": \"Changing the reference group\",\n                \"option_img_url\": \"#\"\n            },\n            {\n                \"id\": \"2\",\n                \"option_text\": \"Linear combination\",\n                \"option-img-url\": \"#\"\n            },\n            {\n                \"id\": \"3\",\n                \"option_text\": \"Standardization \",\n                \"option-img-url\": \"#\"\n            },\n            {\n                \"id\": \"4\",\n                \"option_text\": \"Not possible\",\n                \"option_img_url\": \"#\"\n            },\n        ]\n    },\n]\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\n\nconst AnsComponent = (props) => {\n    const answer = props.data.answer;\n    const type = props.data.type;\n    const id = props.data.id;\n    const [ans, setAns] = React.useState(localStorage.getItem(\"answer\") === null ? {} : JSON.parse(localStorage.getItem(\"answer\")));\n    const [multiAns, setMultiAns] = React.useState({});\n\n    React.useEffect(() => {\n        localStorage.setItem(\"answer\", JSON.stringify(ans))\n    }, [ans])\n    React.useEffect(() => {\n        setAns({ ...ans, [id]: multiAns })\n    }, [multiAns])\n    if (type === \"single-correct\") {\n        const handleChange = (event) => {\n            setAns({ ...ans, [props.data.id]: event.target.value })\n            // setAns(event.target.value);\n        };\n        return <React.Fragment>\n            <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"sigle-correct-option\" name=\"option\" value={ans[id]} onChange={handleChange}>\n                    {answer.map((option, index) => (\n                        <FormControlLabel key={index} value={option.option_text} control={<Radio />} label={option.option_text} />\n                    ))}\n                </RadioGroup>\n            </FormControl>\n        </React.Fragment>\n    }\n    else if (type === \"multi-correct\") {\n        const handleChange = (event) => {\n            setMultiAns({ ...multiAns, [event.target.name]: event.target.checked });\n        };\n        // const { gilad } = state;\n        return <React.Fragment>\n            <FormControl component=\"fieldset\" >\n                <FormGroup>\n\n                    {answer.map((option, index) => (\n                        <FormControlLabel key={index}\n                            control={<Checkbox checked={multiAns[option.option_text] === true ? true : false} onChange={handleChange} name={option.option_text} />}\n                            label={option.option_text}\n                        />\n                    ))}\n                </FormGroup>\n                <FormHelperText>! More than one correct</FormHelperText>\n            </FormControl>\n        </React.Fragment>\n    }\n    else if (type === \"para\") {\n        const handlePara = (e) => {\n            setAns({ ...ans, [id]: e.target.value })\n\n        }\n        return <React.Fragment>\n            <TextField\n                id=\"outlined-multiline-static\"\n                // label=\"Multiline\"\n                multiline\n                style={{ width: \"100%\" }}\n\n                defailtValue={JSON.parse(localStorage.getItem(\"answer\"))[id]}\n                variant=\"outlined\"\n                onChange={handlePara}\n            />\n        </React.Fragment>\n\n    }\n    else if (type === \"file-upload\") {\n        return <React.Fragment>\n            <Button\n                variant=\"contained\"\n                component=\"label\"\n            >\n                Upload File\n                <input\n                    type=\"file\"\n                    hidden\n                />\n            </Button>\n        </React.Fragment>\n    }\n}\n\n\nconst Detail = (props) => {\n    const { data, handleNext, handlePrevious, handleBookmark, length } = props;\n\n    const handleSave = (ans) => {\n        localStorage.setItem(data.id, ans)\n    }\n\n    return (\n        <>\n            <Grid container spacing={1}\n                justify=\"center\"\n            >\n                <Grid item xs={1} >\n                    <Typography component=\"h1\" variant=\"h5\" color=\"inherit\" gutterBottom>\n                        {\"Q.\"}\n                    </Typography>\n                </Grid>\n                <Grid item xs >\n                    <Typography component=\"h1\" variant=\"subtitle1\" color=\"inherit\" gutterBottom>\n                        {data.question['question_text']}\n                    </Typography>\n                    <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n\n                    <AnsComponent data={data} handleSave={handleSave} />\n                </Grid>\n                <Grid\n                    justify=\"space-between\"\n                    container\n                    spacing={10}\n                >\n                    <Grid item>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handlePrevious}\n                            disabled={data.id === 1 ? true : false}\n                        >\n                            previous\n                                </Button>\n                        <Button\n                            // variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handlePrevious}\n                            disabled\n                        >\n                            Clear\n                            </Button>\n                        <IconButton color=\"secondary\" aria-label=\"bookmark-it\"\n                            onClick={() => handleBookmark(data.id)}\n                        >\n                            <BookmarkIcon />\n                        </IconButton>\n                    </Grid>\n\n                    <Grid item>\n                        <Button variant=\"contained\" style={{ marginInline: 10 }} color=\"primary\">\n                            Save\n                            </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleNext}\n                            disabled={data.id === length ? true : false}\n                        >\n                            Next\n                            </Button>\n                    </Grid>\n                </Grid>\n\n            </Grid>\n\n        </>\n    )\n}\n\nexport default Detail\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport Badge from '@material-ui/core/Badge';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport { data } from '../data'\nimport Detail from './detail'\n\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n        justifyContent: \"space-between\"\n    },\n    root: {\n        flexGrow: 1,\n        paddingTop: 20,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        // textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    questionList: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport default function AutoGrid() {\n    const classes = useStyles();\n    const [activeQuestion, setActiveQuestion] = React.useState(1);\n    const [bookmark, setBookmark] = React.useState(localStorage.getItem(\"bookmark\") === null ? {} : JSON.parse(localStorage.getItem(\"bookmark\")));\n    const handleNext = () => {\n        setActiveQuestion(activeQuestion < data.length ? activeQuestion + 1 : activeQuestion)\n    }\n    const handlePrevious = () => {\n        setActiveQuestion(activeQuestion > 1 ? activeQuestion - 1 : activeQuestion)\n    }\n    const handleBookmark = (name) => {\n        setBookmark({ ...bookmark, [name]: bookmark[`${name}`] === true ? false : true })\n    }\n\n    React.useEffect(() => {\n        localStorage.setItem(\"bookmark\", JSON.stringify(bookmark));\n        console.log(bookmark)\n    }, [bookmark])\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}\n                justify=\"center\"\n                // alignItems=\"center\"\n                wrap=\"wrap-reverse\"\n            >\n                {/* <Grid item md={3} xs={12} >\n                    <Paper className={classes.paper}>xs=6</Paper>\n                </Grid> */}\n                <Grid item md={6} xs={12} >\n                    <Paper\n                        className={classes.paper}\n                    >\n                        <Detail data={data[`${activeQuestion}` - 1]} handleNext={handleNext} handlePrevious={handlePrevious} handleBookmark={handleBookmark} length={data.length} id={activeQuestion} />\n\n                    </Paper>\n                </Grid>\n                <Grid item md={3} xs>\n                    <Paper className={classes.paper}>\n                        {data.map((question) => (\n                            <Fab color={question.id === activeQuestion ? \"secondary\" : \"primary\"}\n                                size=\"small\"\n                                className={classes.questionList}\n                                key={question.id}\n                                onClick={() => setActiveQuestion(question.id)}>\n                                <Badge badgeContent={bookmark[`${question.id}`] && <BookmarkIcon />}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'right',\n                                    }} >\n                                    {question.id}\n                                </Badge>\n                            </Fab>\n                        ))}\n\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div >\n    );\n}\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, DarkTheme } from './theme';\nimport NavBar from './components/navBar'\nimport AutoGrid from './components/testing/quiz'\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nfunction App() {\n\n  const [darkMode, setDarkMode] = React.useState(localStorage.getItem(\"theme\") === \"true\" ? true : false);\n  localStorage.setItem(\"theme\", darkMode)\n\n  // storing state value to localstorage so that theme of next visit will set accordingaly\n  //in localstorage items are stored in string formate : so when retrieving checking if \"true\" then setting to True otherwise if null or false then false\n  return (\n    <>\n      <ThemeProvider theme={darkMode ? DarkTheme : theme}>\n        <CssBaseline />\n\n        <NavBar themechange={setDarkMode} status={darkMode} />\n        <Container maxWidth=\"xl\" >\n          <AutoGrid />\n        </Container>\n\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  <>\n    <App />\n    {/* // </React.StrictMode> */}\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}